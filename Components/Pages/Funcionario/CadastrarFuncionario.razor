@page "/funcionario"

@rendermode InteractiveServer

@using SistemaBelezaCrystal.Models
@using AppExemplo.Models
@inject FuncionarioDAO funcionarioDAO
@inject CargoDAO cargoDAO
@inject NavigationManager Navigation

<PageTitle>Cadastrar Funcionário</PageTitle>

@if (erro != null)
{
  <div class="alert alert-danger">
    @erro
  </div>
}

<EditForm Model="_novoFuncionario" OnSubmit="Salvar">
  <div class="form">
    <div class="topbar">
      <a href="/">Início</a>
      <span class="pagina-atual">Cadastrar Funcionário</span>
    </div>

    <span class="label-input">
      <label for="nome">Nome</label>
      <input @bind-value="_novoFuncionario!.Nome" type="text" class="form-control" name="nome" />
    </span>

    <span class="label-input">
      <label for="data-nascimento">Data de Nascimento</label>
      <InputDate @bind-Value="_novoFuncionario!.DataNascimento" class="form-control" name="data-nascimento" />
    </span>

    <span class="label-input">
      <label for="cpf">CPF</label>
      <input @bind-value="_novoFuncionario!.Cpf" type="text" class="form-control" name="cpf" />
    </span>

    <span class="label-input">
      <label for="rg">RG</label>
      <input @bind-value="_novoFuncionario!.Rg" type="text" class="form-control" name="rg" />
    </span>

    <span class="label-input">
      <label for="telefone">Telefone</label>
      <input @bind-value="_novoFuncionario!.Telefone" type="text" class="form-control" name="telefone" />
    </span>

    <span class="label-input">
      <label for="email">E-mail</label>
      <input @bind-value="_novoFuncionario!.Email" type="email" class="form-control" name="email" />
    </span>

    <span class="label-input">
      <label for="endereco">Endereço</label>
      <input @bind-value="_novoFuncionario!.Endereco" type="text" class="form-control" name="endereco" />
    </span>

    <span class="label-input">
      <label for="bairro">Bairro</label>
      <input @bind-value="_novoFuncionario!.Bairro" type="text" class="form-control" name="bairro" />
    </span>

    <span class="label-input">
      <label for="cidade">Cidade</label>
      <input @bind-value="_novoFuncionario!.Cidade" type="text" class="form-control" name="cidade" />
    </span>

    <span class="label-input">
      <label for="estado">Estado</label>
      <input @bind-value="_novoFuncionario!.Estado" type="text" class="form-control" name="estado" maxlength="2" />
    </span>

    <span class="label-input">
      <label for="cep">CEP</label>
      <input @bind-value="_novoFuncionario!.Cep" type="text" class="form-control" name="cep" />
    </span>

    <span class="label-input">
      <label for="salario">Salário</label>
      <input @bind-value="_novoFuncionario!.Salario" type="number" step="0.01" class="form-control" name="salario" />
    </span>

    <!-- SELETOR DE CARGO -->
    <span class="label-input">
      <label for="cargo">Cargo *</label>
      <select @bind="_novoFuncionario!.IdCargo" class="form-control">
        <option value="" disabled selected>Selecione um cargo</option>
        @foreach (Cargo cargo in cargos)
        {
          <option value="@cargo.Id">@cargo.Nome</option>
        }
      </select>
    </span>

    <div class="situacao">
      <h3>Situação</h3>
      <InputRadioGroup @bind-Value="_novoFuncionario!.IdSituacao">
        <fieldset>
          <InputRadio Value=1 /> Ativo
          <br />
          <InputRadio Value=2 /> Inativo
        </fieldset>
      </InputRadioGroup>
    </div>

    <div class="buttons">
      <button class="submit-button" type="submit">Cadastrar</button>
      <NavLink href="/funcionario/listar">
        <button class="cancel-button" type="button">Cancelar</button>
      </NavLink>
    </div>
  </div>
</EditForm>

@code {
  private string? erro = null;
  private Funcionario _novoFuncionario = new();
  private List<Cargo> cargos = new();

  protected override void OnInitialized()
  {
    // Carrega a lista de cargos ao abrir a página
    cargos = cargoDAO.Listar();
  }

  private void Salvar()
  {
    try
    {
      if (string.IsNullOrWhiteSpace(_novoFuncionario.Nome))
      {
        throw new Exception("O campo Nome é obrigatório.");
      }

      if (_novoFuncionario.IdCargo == 0)
      {
        throw new Exception("Selecione um cargo válido.");
      }

      funcionarioDAO.Inserir(_novoFuncionario);
      Navigation.NavigateTo("/funcionario/listar");
    }
    catch (Exception ex)
    {
      erro = ex.Message;
    }
  }
}
